from typing import Protocol, Any, Union, Optional


class _Readable(Protocol):
    def read(self) -> bytes: ...

class _Font(Protocol):
    def getmask(self, text: str, mode: str = ..., direction: Any = ..., features: Any = ...) -> Any: ...

class ImageFont(object):
    def getmask(self, text: str, mode: str = ..., direction: Any = ..., features: Any = ...) -> Any: ...

class FreeTypeFont(object):
    def __init__(self, font: Union[None, str, bytes, _Readable] = ..., size: int = ..., index: int = ..., encoding: str = ...,
                 layout_engine: Optional[int] = ...) -> None: ...
    def getmask(self, text: str, mode: str = ..., direction: Any = ..., features: Any = ...) -> Any: ...

def truetype(font: Union[None, str, bytes, _Readable] = ..., size: int = ..., index: int = ..., encoding: str = ...,
             layout_engine: Optional[int] = ...) -> FreeTypeFont: ...
